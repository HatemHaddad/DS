w <- data.frame(id = 1:332, nobs = x)
ww <- w[w$nobs > threshold , ]
cases <- ww$id
l <- length(cases)
va <- vector(mode = "integer", length = l)
files <- list.files("specdata", full.names = TRUE)
for(i in seq_along(cases)) {
v <- read.csv(files[cases[i]])
ccc <- complete.cases(v)
xx <- v[ccc==TRUE, 2:3]
a[i] <- as.vector(cor(xx))[3]
}
xx
}
corr("specdata",150)
corr <- function(directory, threshold = 0) {
# list all files in a directory.
files <- list.files(directory,full.name = TRUE)
tmp <- vector(mode = "list", length = length(files))
for(i in seq_along(files)) {
tmp[[i]] <- table(complete.cases(read.csv(files[[i]])))
}
output <- data.frame(do.call(rbind,tmp))
x <- output[,2]
w <- data.frame(id = 1:332, nobs = x)
ww <- w[w$nobs > threshold , ]
cases <- ww$id
l <- length(cases)
va <- vector(mode = "integer", length = l)
files <- list.files("specdata", full.names = TRUE)
for(i in seq_along(cases)) {
v <- read.csv(files[cases[i]])
ccc <- complete.cases(v)
xx <- v[ccc==TRUE, 2:3]
a[i] <- as.vector(cor(xx))[3]
}
length(xx)
}
corr("specdata",150)
corr <- function(directory, threshold = 0) {
# list all files in a directory.
files <- list.files(directory,full.name = TRUE)
tmp <- vector(mode = "list", length = length(files))
for(i in seq_along(files)) {
tmp[[i]] <- table(complete.cases(read.csv(files[[i]])))
}
output <- data.frame(do.call(rbind,tmp))
x <- output[,2]
w <- data.frame(id = 1:332, nobs = x)
ww <- w[w$nobs > threshold , ]
cases <- ww$id
l <- length(cases)
va <- vector(mode = "integer", length = l)
files <- list.files("specdata", full.names = TRUE)
for(i in seq_along(cases)) {
v <- read.csv(files[cases[i]])
ccc <- complete.cases(v)
xx <- v[ccc==TRUE, 2:3]
a[i] <- as.vector(cor(xx))[3]
}
seq_along(cases)
}
corr("specdata",150)
corr("specdata")
corr("specdata",5000)
corr <- function(directory, threshold = 0) {
# list all files in a directory.
files <- list.files(directory,full.name = TRUE)
tmp <- vector(mode = "list", length = length(files))
for(i in seq_along(files)) {
tmp[[i]] <- table(complete.cases(read.csv(files[[i]])))
}
output <- data.frame(do.call(rbind,tmp))
x <- output[,2]
w <- data.frame(id = 1:332, nobs = x)
ww <- w[w$nobs > threshold , ]
cases <- ww$id
l <- length(cases)
va <- vector(mode = "integer", length = l)
files <- list.files("specdata", full.names = TRUE)
for(i in seq_along(cases)) {
v <- read.csv(files[cases[i]])
ccc <- complete.cases(v)
xx <- v[ccc==TRUE, 2:3]
va[i] <- as.vector(cor(xx))[3]
}
va
}
corr("specdata")
cr <- corr("specdata",5000)
ce
cr
cr <- corr("specdata",150)
head(cr)
summary(cr)
cr <- corr("specdata",400)
head(cr)
summary(cr)
cr <- corr("specdata",5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
corr <- function(directory, threshold = 0) {
# list all files in a directory.
files <- list.files(directory,full.name = TRUE)
tmp <- vector(mode = "list", length = length(files))
for(i in seq_along(files)) {
tmp[[i]] <- table(complete.cases(read.csv(files[[i]])))
}
output <- data.frame(do.call(rbind,tmp))
x <- output[,2]
w <- data.frame(id = 1:332, nobs = x)
ww <- w[w$nobs > threshold , ]
cases <- ww$id
l <- length(cases)
va <- vector(mode = "integer", length = l)
files <- list.files("specdata", full.names = TRUE)
for(i in seq_along(cases)) {
v <- read.csv(files[cases[i]])
ccc <- complete.cases(v)
xx <- v[ccc==TRUE, 2:3]
va[i] <- as.vector(cor(xx))[3]
}
va <- va[!is.na(va)]
}
cr <- corr("specdata")
length(cr)
cr <- corr("specdata",150)
head(cr)
summary(cr)
cr <- corr("specdata",400)
head(cr)
summary(cr)
cr <- corr("specdata",5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
corr <- function(directory, threshold = 0) {
# list all files in a directory.
files <- list.files(directory,full.name = TRUE)
tmp <- vector(mode = "list", length = length(files))
for(i in seq_along(files)) {
tmp[[i]] <- table(complete.cases(read.csv(files[[i]])))
}
output <- data.frame(do.call(rbind,tmp))
x <- output[,2]
w <- data.frame(id = 1:332, nobs = x)
ww <- w[w$nobs > threshold , ]
cases <- ww$id
l <- length(cases)
va <- vector(mode = "integer", length = l)
files <- list.files("specdata", full.names = TRUE)
for(i in seq_along(cases)) {
v <- read.csv(files[cases[i]])
ccc <- complete.cases(v)
xx <- v[ccc==TRUE, 2:3]
va[i] <- as.vector(cor(xx))[3]
}
va <- va[!is.na(va)]
}
cr <- corr("specdata")
length(cr)
summary(cr)
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
corr <- function(directory, threshold = 0) {
# list all files in a directory.
files <- list.files(directory,full.name = TRUE)
tmp <- vector(mode = "list", length = length(files))
for(i in seq_along(files)) {
tmp[[i]] <- table(complete.cases(read.csv(files[[i]])))
}
output <- data.frame(do.call(rbind,tmp))
x <- output[,2]
w <- data.frame(id = 1:332, nobs = x)
ww <- w[w$nobs > threshold , ]
cases <- ww$id
l <- length(cases)
va <- vector(mode = "numeric", length = l)
files <- list.files("specdata", full.names = TRUE)
for(i in seq_along(cases)) {
v <- read.csv(files[cases[i]])
ccc <- complete.cases(v)
xx <- v[ccc==TRUE, 2:3]
va[i] <- as.vector(cor(xx))[3]
}
va <- va[!is.na(va)]
}
submit()
corr <- function(directory, threshold = 0) {
# list all files in a directory.
files <- list.files(directory,full.name = TRUE)
tmp <- vector(mode = "list", length = length(files))
for(i in seq_along(files)) {
tmp[[i]] <- table(complete.cases(read.csv(files[[i]])))
}
output <- data.frame(do.call(rbind,tmp))
x <- output[,2]
w <- data.frame(id = 1:332, nobs = x)
ww <- w[w$nobs > threshold , ]
cases <- ww$id
l <- length(cases)
va <- vector(mode = "numeric", length = l)
files <- list.files("specdata", full.names = TRUE)
for(i in seq_along(cases)) {
v <- read.csv(files[cases[i]])
ccc <- complete.cases(v)
xx <- v[ccc==TRUE, 2:3]
va[i] <- as.vector(cor(xx))[3]
}
va <- va[!is.na(va)]
}
corr <- function(directory, threshold = 0) {
# list all files in a directory.
files <- list.files(directory,full.name = TRUE)
tmp <- vector(mode = "list", length = length(files))
for(i in seq_along(files)) {
tmp[[i]] <- table(complete.cases(read.csv(files[[i]])))
}
output <- data.frame(do.call(rbind,tmp))
x <- output[,2]
w <- data.frame(id = 1:332, nobs = x)
ww <- w[w$nobs > threshold , ]
cases <- ww$id
l <- length(cases)
va <- vector(mode = "numeric", length = l)
files <- list.files("specdata", full.names = TRUE)
for(i in seq_along(cases)) {
v <- read.csv(files[cases[i]])
ccc <- complete.cases(v)
xx <- v[ccc==TRUE, 2:3]
va[i] <- as.vector(cor(xx))[3]
}
va <- va[!is.na(va)]
}
cr <- corr("specdata")
cr
class(cr)
summary(cr)
submit()
cube <- function(x,n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x
if(x == 5) {
x <- 0
}
x <- 1:10
if(x =5) {
x <- 0
}
if(x =5) {
x <- 0
}
if(x = 5) {
x <- 0
}
y <- 1:10
x <- 7
if(x > 5) {
y <- 0
}
y
x
y <- 1:10
x <- 7
if(x > 5) {
}
y <- 1:10
x <- 7
if(x > 5) {
}
y
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
}
}
y
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
add2 <- function(x,y) {
x + y
}
add2(3,5)
above10 <- function(x) {
use <- x > 10
x[use]
}
above10(1:20)
use
x <- 1:20
x > 10
x[TRUR]
x[TRUE]
x[FALSE]
above <- function(x,n) {
use <- x > n
x[use]
}
x <- 1:20
above(x,2)
above(x)
above <- function(x,n = 10) {
use <- x > n
x[use]
}
above(x,3)
above(x)
airquality
head(airquality)
nc <- ncol(airquality)
nc
means <- numeric(nc)
means
getwd()
coloumnmean <- function(x) {
nc <- ncol(x)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(x[,i])
}
means
}
coloumnmean(airquality)
formals(help)
formals(cor)
args(lm)
search()
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z - 10
z <-  10
f(3)
getwd()
ls
lapply
arg(lapply)
args(lapply)
x <- list(a= 1:5, b + rnorm(10))
x <- list(a= 1:5, b = rnorm(10))
x
lapply(x,mean)
x <- 1:4
lapply(x,runif)
runif
x <- matrix(rnorm(200),20,10)
x
apply(x,1,sum)
x <- matrix(rnorm(200), 20,10)
x
x <- matrix(rnorm(200), 10,5)
x
mapply(rep, 1:4, 4:1)
log(-1)
traceback()
debug(mean)
mean(1)
mean(j)
quit
q
exists()
begug(lm)
debug(lm(lm)
debug(lm
debug(lm)
lm()
pnorm(-1,mean=0,sd=1)
pnorm(0,mean=0,sd=1)
pnorm(2,mean=0,sd=1)
pnorm(1,mean=0,sd=1)
pnorm(1800,mean=1500,sd=300)
pnprm(24, mean = 21, sd = 5)
pnorm(24, mean = 21, sd = 5)
qnorm(.1,mean21,sd=5)
qnorm(.1,mean=21,sd=5)
list()
ls
ls()
rm(a)
counts <- table(mtcars$gear)
barplot(counts, main="Car Distribution",
xlab="Number of Gears")
quit
q
x <- 5
library(datasets)
data("iris")
?iris
head(iris)
virginica <- iris[Species == "virginica",]
virginica <- iris[Species = "virginica",]
virginica <- iris[Sepal.Length  > 5,]
virginica <- iris[1  > 5,]
virginica
virginica <- iris[1  > 2,]
virginica
virginica <- iris["Species"  == setosa,]
iris["Species"  == setosa,]
source("http://www.openintro.org/stat/data/present.R")
present
head(present)
dim(present)
names(present)
dim(present)
names(present)
present$year
View(present)
View(present)
dim(present)[2]
present$boys
present$girls
girls
present[girls]
$girls
head(present)
plot(x = present$year, y = present$girls)
plot(x = present$year, y = present$girls, type = "l")
plot(present$year, present$boys + present$girls, type ="l")
max(present$boys+present$girls)
which(max(present$boys+present$girls))
present
present$total <- present$boys + present$girls
present[which(max(present$total))]
present[which(max(present$total)),]
present[max(present$total),]
present[,max(present$total)]
max(present$total)
present[which(present$total == max(present$total)),]
present[which(present$girls == max(present$girls)),]
present[which(present$boys == max(present$boys)),]
plot(present$year,present$boys/(present$boys+present$girls), type = "l")
plot(present$year,present$girls/(present$boys+present$girls), type = "l")
table(present$boys > prsesent$girls)
table(present$boys > present$girls)
present$boys > present$girls
present$girls > present$boys
plot(present$year, present$boys/present$girls, type = "l")
present$diff <- abs(present$boys - present$girls)
present[which(present$diff == max(present$diff)),]
dim(present)
source("http://www.openintro.org/stat/data/present.R")
dim(present)
source("http://www.openintro.org/stat/data/cdc.R")
dim(cdc)
names(cdc)
head(cdc)
class(cdc)
dim(cdc)
head(cdc)
tail(cdc)
summary(cdc$weight)
summary(cdc$weight)
mean(cdc$weight)
